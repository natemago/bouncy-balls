{"version":3,"sources":["bouncyballs/drawables.ts","bouncyballs/animation.ts","bouncyballs/engine.ts","components/Canvas.tsx","components/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Vector2D","x","y","mag","this","Math","sqrt","vec","value","other","cosV","abs","fx","fy","mul","BaseDrawableObject","position","velocity","acceleration","scale","frame","time","delta","add","mulScalar","Canvas2DrawingProvider","renderingContext","canvasEl","canvas","getContext","undefined","ctx","save","clearRect","width","height","transform","restore","drawables","drawable","push","filter","d","getRenderingContext","beforeRender","forEach","render","e","console","error","afterRender","Specs","fillColor","borderColor","borderWidth","Ball","radius","specs","fillStyle","strokeStyle","beginPath","arc","PI","closePath","fill","stroke","BaseLoop","running","frameTickHandler","lastFrameAt","tickDone","handlers","currentTime","Date","getTime","handler","log","scheduleTick","tick","bind","cancelTick","AnimationLoop","tickFn","self","requestAnimationFrame","onAnimationFrame","isRunning","tickHandler","cancelAnimationFrame","UpdateLoop","fps","interval","setInterval","clearInterval","Engine","settings","drawingProvider","animationLoop","updateLoop","objects","setupWorld","start","addHandler","boundaryCheck","baseObjectsUpdate","bounceBack","collisionPhysics","world","removeFromAnimation","bdo","remove","update","elasticity","getBoundingBox","bbox","balls","map","colliding","i","ball","slice","b2","dist","euclidDistace","radDist","diff","vd","sub","scf","pair","b1","m1","m2","c1","c2","v1","dot","v2","stop","w","h","obj","Canvas","props","setCanvas","window","addEventListener","updateCanvasWidthAndHeight","getSize","event","onClick","ev","clientX","clientY","rect","getBoundingClientRect","left","top","ref","c","handleClick","className","React","Component","Pallete","Red","Magenta","Green","Teal","Blue","Yellow","ObjectsSize","Little","Small","Medium","Large","Huge","Settings","state","settingsOpen","onSetSettings","newObjectsPerClick","objectsColor","objectsSize","onClose","values","setState","Object","assign","colorOptions","entries","entry","name","sizeOptions","htmlFor","type","min","max","onChange","updateState","Number","target","step","closeSettings","saveSettings","App","engine","settingsVisible","updateWorldSize","g","randomVelocity","random","velocityRange","objectsNumber","addObject","createBall","settinsComp","changeSettings","toggleSettings","icon","faCog","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.682bd2e5.chunk.js","sourcesContent":["export interface DrawingProvider {\n    add(drawable:Drawable):void;\n    remove(drawable: Drawable):void;\n    render(frame: number, time: Date, delta: number):void\n}\n\ntype BoundingBox = {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n}\n\nexport interface Drawable {\n    render(ctx: RenderingContext, frame: number, time: Date, delta: number):void;\n    update(frame: number, time: Date, delta: number):void;\n    getBoundingBox(): BoundingBox\n}\n\n/**\n * Represents a 2D vector.\n */\nexport class Vector2D {\n    x: number = 0;\n    y: number = 0;\n    mag: number = 0;\n\n    constructor(x?:number, y?:number) {\n        if(x) {\n            this.x = x;\n        }\n        if (y) {\n            this.y = y;\n        }\n        this.mag = Math.sqrt(this.x**2 + this.y**2)\n    }\n\n    add(vec: Vector2D): Vector2D {\n        return new Vector2D(this.x + vec.x, this.y + vec.y)\n    }\n\n    sub(vec: Vector2D): Vector2D {\n        return new Vector2D(\n            this.x - vec.x,\n            this.y - vec.y\n        )\n    }\n\n    /**\n     * \n     * @param vec the vector\n     */\n    mul(vec: Vector2D) {\n        return new Vector2D(this.x * vec.x, this.y * vec.y)\n    }\n\n    mulScalar(value:number): Vector2D {\n        return new Vector2D(this.x * value, this.y * value)\n    }\n\n    euclidDistace(other:Vector2D): number {\n        return Math.sqrt((this.x - other.x)**2 + (this.y - other.y)**2)\n    }\n\n    dot(other:Vector2D): number {\n        return this.x * other.x + this.y * other.y\n    }\n\n    value(): number {\n        return this.mag\n    }\n\n    edot(other:Vector2D): number {\n        const cosV = this.x / this.value()\n        return Math.abs(this.value() * other.value()) * cosV\n    }\n\n    scale(fx: number, fy:number): Vector2D {\n        return this.mul(new Vector2D(fx, fy))\n    }\n}\n\nexport abstract class BaseDrawableObject implements Drawable{\n    position:Vector2D = new Vector2D(0, 0);\n    velocity: Vector2D = new Vector2D(0, 0);\n    acceleration: Vector2D = new Vector2D(0, 0);\n    scale:Vector2D = new Vector2D(1, 1);\n\n    constructor(position?:Vector2D, velocity?:Vector2D, acceleration?: Vector2D, scale?: Vector2D) {\n        this.position = position?? this.position;\n        this.velocity = velocity?? this.velocity;\n        this.acceleration = acceleration?? this.acceleration;\n        this.scale = scale?? this.scale;\n    }\n\n    update(frame: number, time: Date, delta: number):void {\n        this.velocity = this.velocity.add(this.acceleration.mulScalar(delta))\n        this.position = this.position.add(this.velocity)\n    }\n\n    abstract render(ctx: RenderingContext, frame: number, time: Date, delta: number):void;\n    abstract getBoundingBox(): BoundingBox\n    \n}\n\n\nexport abstract class BaseDrawingProvider implements DrawingProvider {\n    drawables: Drawable[] = [];\n\n\n    add(drawable: Drawable): void {\n        this.drawables.push(drawable);\n    }\n\n    remove(drawable: Drawable): void {\n        this.drawables = this.drawables.filter(d => d !== drawable)\n    }\n\n    render(frame: number, time: Date, delta: number): void {\n        const ctx = this.getRenderingContext()\n        if(!ctx) {\n            console.error('Rendering context not available. Will not render.')\n            return \n        }\n        this.beforeRender(ctx)\n\n\n        this.drawables.forEach(drawable => {\n            try {\n                drawable.render(ctx, frame, time, delta);\n            } catch(e) {\n                console.error('Failed to draw', drawable, '; error:', e)\n            }\n        })\n\n        this.afterRender(ctx)\n    }\n\n    protected beforeRender(ctx: RenderingContext) {\n\n    }\n\n    protected afterRender(ctx: RenderingContext) {\n\n    }\n\n    abstract getRenderingContext(): RenderingContext | undefined;\n\n}\n\nexport class Canvas2DrawingProvider extends BaseDrawingProvider {\n    \n    private renderingContext?: CanvasRenderingContext2D;\n    private canvasEl?: HTMLCanvasElement;\n\n    setCanvas(canvas: HTMLCanvasElement): void {\n        this.canvasEl = canvas;\n        this.renderingContext = canvas.getContext(\"2d\")?? undefined\n    }\n\n    getRenderingContext(): RenderingContext | undefined {\n        return this.renderingContext;\n    }\n\n    beforeRender(ctx: CanvasRenderingContext2D) {\n        if (!this.canvasEl) {\n            return\n        }\n        ctx.save()\n        ctx.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height)\n        ctx.transform(1, 0, 0, -1, 0, this.canvasEl.height)  // -1 scale the y axis, thus flip over\n    }\n\n    afterRender(ctx: CanvasRenderingContext2D) {\n        ctx.restore()\n    }\n}\n\n\nexport class Specs {\n    fillColor: string;\n    borderColor: string;\n    borderWidth: number;\n\n    constructor(fillColor: string, borderColor: string, borderWidth: number) {\n        this.fillColor = fillColor;\n        this.borderColor = borderColor;\n        this.borderWidth = borderWidth;\n    }\n}\n\n\nexport class Ball extends BaseDrawableObject {\n\n    radius: number = 0;\n    specs: Specs;\n\n    constructor(radius: number, specs: Specs, position?:Vector2D, velocity?:Vector2D, acceleration?: Vector2D, scale?: Vector2D) {\n        super(position, velocity, acceleration, scale)\n        this.radius = radius;\n        this.specs = specs;\n    }\n\n\n    render(ctx: CanvasRenderingContext2D, frame: number, time: Date, delta: number): void {\n        if(this.radius <= 0) {\n            return\n        }\n        ctx.save()\n\n        ctx.fillStyle = this.specs.fillColor\n        ctx.strokeStyle = this.specs.borderColor\n\n        ctx.beginPath()\n        ctx.arc(this.position.x + this.radius, this.position.y + this.radius, this.radius, 0, 2*Math.PI)\n        ctx.closePath()\n        ctx.fill()\n        if (this.specs.borderWidth) {\n            ctx.stroke()\n        }\n\n        ctx.restore()\n    }\n\n    getBoundingBox(): BoundingBox {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.radius * 2,\n            height: this.radius * 2,\n        }\n    }\n\n}","export interface LoopTickHandler {\n    (frame: number, time: Date, delta: number): void;\n};\n\nexport interface Loop {\n    start(): void;\n    stop(): void;\n    isRunning(): boolean;\n    addHandler(handler: LoopTickHandler): void;\n}\n\nexport abstract class BaseLoop implements Loop{\n    private running: boolean = false;\n    protected frameTickHandler?: number;\n    private frame: number = 0;\n    private lastFrameAt?: Date;\n    private tickDone:boolean = true;\n    \n    protected handlers: LoopTickHandler[] = [];\n\n    tick() {\n        // if(!this.tickDone) {\n        //     return\n        // }\n        // this.tickDone = false;\n        const frame = this.frame + 1;\n        const currentTime = new Date();\n        const delta = (this.lastFrameAt ? currentTime.getTime() - this.lastFrameAt?.getTime() : 0) / 1000;  // seconds instead of milliseconds\n        this.handlers.forEach((handler) => {\n            try{\n                handler(frame, currentTime, delta);\n            }catch(e) {\n                console.log('Error:', e, 'at handler:', handler);\n            }\n        })\n        //this.tickDone = true;\n        this.lastFrameAt = currentTime\n    }\n\n    start() {\n        if(this.running) {\n            return\n        }\n        this.running = true;\n        this.lastFrameAt = new Date()\n        this.frameTickHandler = this.scheduleTick(this.tick.bind(this));\n    }\n\n    stop() {\n        if(!this.running) {\n            return;\n        }\n        if(this.frameTickHandler){\n            this.cancelTick(this.frameTickHandler);\n        }\n    }\n\n    isRunning(): boolean {\n        return this.running;\n    }\n\n    addHandler(handler: LoopTickHandler): void {\n        this.handlers.push(handler);\n    }\n\n    abstract scheduleTick(tickFn: Function): number;\n    abstract cancelTick(tickHandler:number): void;\n\n}\n\nexport class AnimationLoop extends BaseLoop {\n\n    scheduleTick(tickFn: Function): number {\n        console.log('Request animation frame...')\n\n        const self = this;\n\n        const onAnimationFrame = function(time: number) {\n            tickFn()\n            if(self.isRunning()) {\n                self.frameTickHandler = requestAnimationFrame(onAnimationFrame);\n            }\n        }\n\n        return requestAnimationFrame(onAnimationFrame);\n    }\n\n    cancelTick(tickHandler: number): void {\n        if(this.frameTickHandler){\n            cancelAnimationFrame(this.frameTickHandler);\n        }\n    }\n\n}\n\nexport class UpdateLoop extends BaseLoop {\n\n    fps: number = 60;\n\n    constructor(fps: number) {\n        super();\n        this.fps = fps;\n    }\n\n    scheduleTick(tickFn: Function): number {\n        const interval = 1000/this.fps;\n        return setInterval(tickFn, interval);\n    }\n    cancelTick(tickHandler: number): void {\n        clearInterval(tickHandler);\n    }\n\n}","import {AnimationLoop, UpdateLoop, Loop} from './animation'\nimport {Vector2D, DrawingProvider, Drawable, BaseDrawableObject, Ball} from './drawables'\n\ntype EngineSettings = {\n    fps: number,\n    world: {\n        width: number,\n        height: number,\n    },\n    elasticity: number,\n}\n\nexport class Engine {\n\n    animationLoop: Loop;\n    updateLoop: Loop;\n    settings: EngineSettings;\n    drawingProvider: DrawingProvider;\n    objects: Drawable[] = []\n\n    constructor(settings: EngineSettings, drawingProvider: DrawingProvider) {\n        this.settings = settings\n        this.animationLoop = new AnimationLoop()\n        this.updateLoop = new UpdateLoop(settings.fps)\n        this.drawingProvider = drawingProvider\n    }\n\n    start():void {\n        this.setupWorld()\n        this.updateLoop.start()\n        this.animationLoop.start()\n    }\n\n    setupWorld():void {\n        this.updateLoop.addHandler(this.boundaryCheck.bind(this))\n        this.updateLoop.addHandler(this.baseObjectsUpdate.bind(this))\n        //this.updateLoop.addHandler(this.bounceWalls.bind(this))\n        this.updateLoop.addHandler(this.bounceBack.bind(this))\n        this.updateLoop.addHandler(this.collisionPhysics.bind(this))\n        // setup the rendering\n        this.animationLoop.addHandler(this.drawingProvider.render.bind(this.drawingProvider))\n    }\n\n    boundaryCheck(frame: number, time:Date, delta:number):void {\n        const {width} = this.settings.world\n        const removeFromAnimation:Drawable[] = []\n        this.objects = this.objects.filter(drawable => {\n            if(drawable instanceof BaseDrawableObject) {\n                const bdo = drawable as BaseDrawableObject\n                const {x} = bdo.position\n                \n                if ((x < 0 && bdo.velocity.x < 0) || (x > width && bdo.velocity.x > 0)) {\n                    removeFromAnimation.push(drawable)\n                    return false\n                }\n                return true\n            }\n            return false\n        })\n        const drawingProvider = this.drawingProvider\n        removeFromAnimation.forEach(drawable => drawingProvider.remove(drawable))\n    }\n\n    baseObjectsUpdate(frame: number, time:Date, delta:number): void {\n        this.objects.forEach(drawable => {\n            drawable.update(frame, time, delta)\n        })\n    }\n\n    bounceBack(frame: number, time:Date, delta:number): void {\n        const {elasticity} = this.settings\n        this.objects.forEach(drawable => {\n            if (drawable instanceof BaseDrawableObject) {\n                const bdo = drawable as BaseDrawableObject\n                const bbox = bdo.getBoundingBox()\n                if (bbox.y <= 0) {\n                    bdo.position = new Vector2D(bdo.position.x, 0)\n                    bdo.velocity = new Vector2D(bdo.velocity.x, -bdo.velocity.y*elasticity)\n                }\n            }\n        })\n    }\n\n    bounceWalls(frame: number, time:Date, delta:number): void {\n        const {elasticity} = this.settings\n        this.objects.forEach(drawable => {\n            if (drawable instanceof BaseDrawableObject) {\n                const bdo = drawable as BaseDrawableObject\n                const bbox = bdo.getBoundingBox()\n                if(bbox.x < 0) {\n                    bdo.position = new Vector2D(bdo.position.x - bbox.x, bdo.position.y)\n                    bdo.velocity = new Vector2D(-bdo.velocity.x, bdo.velocity.y*elasticity)\n                }\n                if(bbox.x > this.settings.world.width) {\n                    bdo.position = new Vector2D(bdo.position.x - (bbox.x - this.settings.world.width), bdo.position.y)\n                    bdo.velocity = new Vector2D(-bdo.velocity.x, bdo.velocity.y*elasticity)\n                }\n            }\n        })\n    }\n\n\n    collisionPhysics(frame: number, time:Date, delta:number):void {\n        const balls:Ball[] = this.objects.filter(d => d instanceof Ball).map(d => d as Ball);\n        const colliding: [Ball, Ball][] = []\n\n        balls.forEach((d, i) => {\n            const ball = d as Ball\n            balls.slice(i+1).forEach(b2 => {\n                const dist = ball.position.euclidDistace(b2.position)\n                const radDist = ball.radius + b2.radius\n                if (dist <= radDist) { // colision\n                    colliding.push([ball, b2])\n                    if (dist < radDist) { // fix the overlapping balls\n                        const diff = radDist - dist\n                        const vd = b2.position.sub(ball.position)\n                        const scf = (vd.mag + diff) / vd.mag\n                        b2.position = vd.scale(scf, scf).add(ball.position)\n                    }\n                }\n            })\n        })\n\n        colliding.forEach(pair => {\n            const [b1, b2] = pair\n            const m1 = b1.radius**3 // mass proprtional to volume, volume is proportional to the 3rd power of the radius\n            const m2 = b2.radius**3\n            const c1 = b1.position.add(new Vector2D(b1.radius, b1.radius))\n            const c2 = b2.position.add(new Vector2D(b2.radius, b2.radius))\n            const v1 = b1.velocity.sub(c1.sub(c2).mulScalar(b1.velocity.sub(b2.velocity).dot(c1.sub(c2)) / (c1.sub(c2).value()**2)).mulScalar((2*m2)/(m1+m2)))\n            const v2 = b2.velocity.sub(c2.sub(c1).mulScalar(b2.velocity.sub(b1.velocity).dot(c2.sub(c1)) / (c2.sub(c1).value()**2)).mulScalar((2*m1)/(m1+m2)))\n\n            b1.velocity = v1\n            b2.velocity = v2\n        })\n    }\n\n\n    stop():void {\n        this.animationLoop.stop()\n        this.updateLoop.stop()\n    }\n\n    updateWorldSize(w: number, h: number): void {\n        this.settings.world = {\n            width: w,\n            height: h\n        }\n    }\n\n    addObject(obj:Drawable): void {\n        this.drawingProvider.add(obj)\n        this.objects.push(obj)\n    }\n}","import React from 'react';\nimport {Canvas2DrawingProvider} from '../bouncyballs/drawables';\n\nimport './Canvas.css'\n\ntype CanvasProps = {\n    drawingProvider: Canvas2DrawingProvider,\n    onClick?: (event: CanvasMouseEvent) => void,\n}\n\ntype CanvasState = {\n\n}\n\nexport type CanvasMouseEvent = {\n    x: number,\n    y: number,\n    event: React.MouseEvent,\n}\n\nexport default class Canvas extends React.Component<CanvasProps, CanvasState> {\n    \n    drawingProvider?: Canvas2DrawingProvider\n    canvas?: HTMLCanvasElement | null\n\n    constructor(props:any) {\n        super(props)\n        this.drawingProvider = this.props.drawingProvider;\n    }\n\n    componentDidMount() {\n        if(this.drawingProvider && this.canvas) {\n            this.drawingProvider.setCanvas(this.canvas)\n        }\n        \n        window.addEventListener('resize', this.updateCanvasWidthAndHeight.bind(this))\n        this.updateCanvasWidthAndHeight()\n    }\n\n    componentDidUpdate() {\n        if(this.drawingProvider && this.canvas) {\n            this.drawingProvider.setCanvas(this.canvas)\n        }\n    }\n\n    updateCanvasWidthAndHeight() {\n        if (this.canvas) {\n            const [width, height] = this.getSize()\n            this.canvas.width = width?? 0\n            this.canvas.height = height?? 0\n        }\n    }\n\n    handleClick(event: React.MouseEvent) {\n        if(this.props.onClick) {\n            const ev = {\n                x: event.clientX,\n                y: event.clientY,\n                event\n            }\n            const rect = this.canvas?.getBoundingClientRect()\n            if(rect) {\n                ev.x -= rect.left\n                ev.y -= rect.top\n            }\n            this.props.onClick(ev)\n        }\n    }\n\n    getSize() {\n        const rect = this.canvas?.getBoundingClientRect()\n        return [rect?.width, rect?.height]\n    }\n\n    render() {\n        return <canvas ref={(c) => this.canvas = c} onClick={this.handleClick.bind(this)} className=\"drawing-canvas\"></canvas>\n    }\n}","import React from 'react'\n\nimport './Settings.css'\n\n\nexport type SettingsValues = {\n    newObjectsPerClick: number,\n    objectsColor: string,\n    objectsSize: number,\n    elasticity: number,\n}\n\n\ntype SettingsState = {\n    newObjectsPerClick: number,\n    objectsColor: string,\n    objectsSize: number,\n    elasticity: number,\n    settingsOpen: boolean,\n}\n\ntype SettingsProps = {\n    settings: SettingsValues,\n    onSetSettings?: (settings: SettingsValues)=> void\n    onClose?: ()=>void\n}\n\nexport const Pallete = {\n    Red: \"#c4014c\",\n    Magenta: \"#f3008e\",\n    Green: \"#00b84c\",\n    Teal: \"#008c9e\",\n    Blue: \"#004a9e\",\n    Yellow: \"#ebe712\"\n}\n\nexport const ObjectsSize = {\n    Little: 7,\n    Small: 10,\n    Medium: 20,\n    Large: 25,\n    Huge: 50,\n}\n\n\nexport default class Settings extends React.Component<SettingsProps, SettingsState> {\n\n    constructor(props: SettingsProps) {\n        super(props)\n        const settings = props.settings\n        this.state = {\n            settingsOpen: false,\n            ...settings\n        }\n    }\n\n    saveSettings():void {\n        const state = this.state\n        if(this.props.onSetSettings) {\n            this.props.onSetSettings({\n                newObjectsPerClick: state.newObjectsPerClick,\n                objectsColor: state.objectsColor,\n                objectsSize: state.objectsSize,\n                elasticity: state.elasticity,\n            })\n        }\n        if(this.props.onClose) {\n            this.props.onClose()\n        }\n    }\n\n    closeSettings(): void {\n        if(this.props.onClose) {\n            this.props.onClose()\n        }\n    }\n\n    updateState(values: any) {\n        console.log('Update state ->', values)\n        this.setState(Object.assign(this.state, values))\n        console.log('Curr state', this.state)\n    }\n\n    toggleSettings() {\n        const state = this.state\n        this.setState(Object.assign(this.state, {\n            settingsOpen: !state.settingsOpen\n        }))\n    }\n\n    render():any {\n        const state = this.state\n        const colorOptions = Object.entries(Pallete).map((entry=> {\n            const [name, value] = entry\n            return <option value={value} >{name}</option>\n        }))\n        const sizeOptions = Object.entries(ObjectsSize).map(entry => {\n            const [name, value] = entry\n            return <option value={value} >{name}</option>\n        })\n        return (\n            <div className=\"settings\">\n                <div className=\"settings-form\">\n                    <div className=\"input-group\">\n                        <label htmlFor=\"objects-per-click\">Objects per click</label>\n                        <input name=\"objects-per-click\" type=\"number\" value={state.newObjectsPerClick} min=\"1\" max=\"5\" onChange={e => this.updateState({\n                            newObjectsPerClick: Number(e.target.value)\n                        })}></input>\n                    </div>\n                    <div className=\"input-group\">\n                    <label htmlFor=\"objects-color\">Objects color</label>\n                        <select name=\"objects-color\" value={state.objectsColor} onChange={e => this.updateState({\n                            objectsColor: e.target.value\n                        })}>\n                            {colorOptions}\n                        </select>\n                    </div>\n                    <div className=\"input-group\">\n                    <label htmlFor=\"objects-size\">Objects size</label>\n                        <select name=\"objects-size\" value={state.objectsSize} onChange={e => this.updateState({\n                            objectsSize: Number(e.target.value)\n                        })}>\n                            {sizeOptions}\n                        </select>\n                    </div>\n                    <div className=\"input-group\">\n                    <label htmlFor=\"elasticity\">Elasticity</label>\n                        <input name=\"elasiticity\" type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" value={this.state.elasticity} onChange={e => this.updateState({\n                            elasticity: Number(e.target.value)\n                        })}></input>\n                    </div>\n                    <div className=\"input-group form-actions\">\n                        <button onClick={this.closeSettings.bind(this)}>Cancel</button>\n                        <button onClick={this.saveSettings.bind(this)}>Save</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCog} from '@fortawesome/free-solid-svg-icons'\n\nimport {Canvas2DrawingProvider, Ball, Specs, Vector2D} from './bouncyballs/drawables'\nimport {Engine} from './bouncyballs/engine'\n\nimport Canvas, {CanvasMouseEvent} from './components/Canvas'\nimport Settings, {SettingsValues, Pallete, ObjectsSize} from './components/Settings'\n\n//import logo from './logo.svg';\nimport './App.css';\n\n\ntype AppState = {\n  settingsVisible: boolean,\n  settings: SettingsValues,\n}\n\ntype AppProps = {}\n\n/**\n * Main app React component class.\n */\nclass App extends React.Component<AppProps, AppState> {\n\n  drawingProvider: Canvas2DrawingProvider\n  canvas?: Canvas | null\n\n  engine: Engine\n\n\n  constructor(props:any) {\n    super(props)\n    this.drawingProvider = new Canvas2DrawingProvider()\n    const settings = {\n      elasticity: 0.7,\n        newObjectsPerClick: 5,\n        objectsColor: Pallete.Red,\n        objectsSize: ObjectsSize.Medium,\n    }\n    this.state = {\n      settingsVisible: false,\n      settings: settings,\n    }\n    this.engine = new Engine({\n      fps: 60,\n      world: {\n        width: 0,\n        height: 0,\n      },\n      elasticity: settings.elasticity,\n    }, this.drawingProvider)\n  }\n\n  componentDidMount(){\n    const updateWorldSize = this.updateWorldSize.bind(this)\n    window.addEventListener('resize', ev => {\n      updateWorldSize()\n    })\n    updateWorldSize()\n    this.engine.start()\n  }\n\n  updateWorldSize() {\n    const [width, height] = this.canvas?.getSize()?? [0, 0]\n    this.engine.updateWorldSize(width?? 0, height?? 0)\n    console.log('Update world size to:', width, height)\n  }\n  \n  createBall(x: number, y: number) {\n    const {settings} = this.state\n    const position = new Vector2D(x, y)\n    const g = new Vector2D(0, -9.81)\n    const velocityRange = 15\n    const randomVelocity = new Vector2D(Math.random()*velocityRange - velocityRange/2, Math.random()*velocityRange - velocityRange/2)\n    return new Ball(\n      settings.objectsSize/2 + Math.random()*(settings.objectsSize/2),\n      new Specs(settings.objectsColor, 'black', 1),\n      position, \n      randomVelocity, \n      g)\n  }\n\n  onClick(e: CanvasMouseEvent) {\n    let objectsNumber = this.state.settings.newObjectsPerClick\n    let y = this.engine.settings.world.height - e.y\n    while(objectsNumber) {\n      this.engine.addObject(this.createBall(e.x, y))\n      objectsNumber--\n    }\n  }\n\n  changeSettings(settings: SettingsValues) {\n    this.setState(Object.assign(this.state, {\n      settings: settings\n    }))\n    this.engine.settings.elasticity = settings.elasticity\n  }\n\n  toggleSettings() {\n    this.setState(Object.assign(this.state, {\n      settingsVisible: !this.state.settingsVisible\n    }))\n  }\n\n  closeSettings():void {\n    this.setState(Object.assign(this.state, {\n      settingsVisible: false\n    }))\n  }\n\n  render(){\n    const settinsComp = this.state.settingsVisible ? <Settings settings={this.state.settings} onSetSettings={this.changeSettings.bind(this)} onClose={this.closeSettings.bind(this)}></Settings> : <></>\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"header-menu\">\n            <div className=\"header-title\">\n              <h1>Bouncy Balls</h1>\n            </div>\n            <div className=\"header-actions\">\n              <button onClick={this.toggleSettings.bind(this)}><FontAwesomeIcon icon={faCog}></FontAwesomeIcon></button>\n            </div>\n          </div>\n          {settinsComp}\n        </header>\n        <section className=\"main-section\">\n          <Canvas drawingProvider={this.drawingProvider} onClick={this.onClick.bind(this)} ref={(c) => this.canvas = c}></Canvas>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}